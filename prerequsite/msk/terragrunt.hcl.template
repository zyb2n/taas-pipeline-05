locals {
  # Automatically load environment-level variables
  environment_vars = read_terragrunt_config(find_in_parent_folders("env.hcl"))

  # Automatically load customer-level variables
  customer_vars = read_terragrunt_config(find_in_parent_folders("customer.hcl"))

  # Automatically load region-level variables
  region_vars = read_terragrunt_config(find_in_parent_folders("region.hcl"))

  # Extract out common variables for reuse
  env = local.environment_vars.locals.environment
  tags = local.environment_vars.locals.tags
  aws_region = local.region_vars.locals.aws_region
  customer_tags = local.customer_vars.locals.tags
}

include {
  path = "${find_in_parent_folders()}"
}

terraform {
  source = "git::git@github.com:zyb2n/terraform-modules.git//aws/msk?ref=v0.1.0"
  #to test module changes, check out terraform-modules to same location as terraform, uncomment below
  #source = "../../../../../../../terraform-modules/aws/msk"
}

dependency "vpc" {
  config_path = "../../vpc"
}

dependency "shared_vpc" {
  config_path = "../../../shared/vpc"
}

inputs = {

  aws = {
    "region" = local.aws_region
  }

  tags = merge(
    local.tags,
    local.customer_tags
  )

  vpc_id          = dependency.vpc.outputs.vpc_id

  cluster_name    = "demo-CUSTOMER"
  instance_type   = "kafka.t3.small"
  #number_of_nodes = length(data.aws_subnet_ids.default.ids)
  number_of_nodes = 2
  #client_subnets  = dependency.vpc.outputs.private_subnets
  client_subnets  = [dependency.vpc.outputs.private_subnets[0], dependency.vpc.outputs.private_subnets[1]]
  kafka_version   = "2.4.1.1"
  volume_size     = 10

  prometheus_jmx_exporter  = true
  prometheus_node_exporter = true

  cloudwatch_logs_group = "demo-CUSTOMER"

  server_properties = {
    "auto.create.topics.enable"  = "true"
    "default.replication.factor" = "2"
  }

  encryption_in_transit_client_broker = "TLS_PLAINTEXT"
  encryption_in_transit_in_cluster    = true
  enhanced_monitoring                 = "DEFAULT"

}

